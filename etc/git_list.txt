Команды для Git:
----------------
Установка git на компьютор:
$ git --version
$ git config --global user.name "Ivan Ivanov"
$ git config --global user.email "mail@name.ru"

Просмотр изменений:
$ git config --global user.name
$ git config --global user.email
$ git config --global --list     #просмотр(вывод)пользователя, всех альясов для текущего пользователя, в git

Создать новый репозиторий:
$ git init             # создать новый проект в текущей директории
$ git init folder_name # создать новый проект в указанной директории

Добавление изменений в индекс:
$ git add .        # добавить в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий
$ git add text.txt # добавить в индекс указанный файл (был изменён, был удалён или это новый файл)
$ git add -i       # запустить интерактивную оболочку для добавления в индекс только выбранных файлов
$ git add -p       # показать новые/изменённые файлы по очереди с указанием их изменений и вопросом об отслеживании/индексировании

Удаление изменений из индекса
$ git reset            # убрать из индекса все добавленные в него изменения (в рабочей директории все изменения сохранятся), антипод git add
$ git reset readme.txt # убрать из индекса изменения указанного файла (в рабочей директории изменения сохранят

Коммиты:
$ git commit — записать изменения в репозиторий. для написания сообщения откроется назначенный редактор.
$ git commit -m "[descriptive message]" — записать изменения с заданным сообщением.
$ git commit -a -m "Name of commit" # проиндексировать отслеживаемые файлы (ТОЛЬКО отслеживаемые, но НЕ новые файлы) и закоммитить, добавить сообщение
$ git commit --amend — добавить изменения к последнему коммиту.

Удалённые репозитории:
$ git remote -v              # показать список удалённых репозиториев, связанных с локальным
$ git remote add origin https://github.com:nicothin/test.git # добавить удалённый репозиторий (с сокр. именем origin) с указанным URL
$ git remote show origin     # получить данные об удалённом репозитории с сокращенным именем origin

Статус, История:
$ git status
$ git log --pretty=format:'%h %ad' --date=short
$ git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
$ git diff  — показать изменения в файлах, которые еще не были добавлены в индекс коммита (staged).
$ git diff HEAD — показать что изменилось с последнего коммита.


UI отображение работы git:
$ gitk 



Алиасы для команд Git: 
alias.co=checkout
alias.ci=commit
alias.st=status
alias.br=branch
alias.hist=log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
alias.type=cat-file -t
alias.dump=cat-file -p

Алиасы
Для команд можно создавать алиасы (синонимы). 
Для этого в файл C:/Users/ИМЯ_ПОЛЬЗОВАТЕЛЯ/.bashrc нужно вписать строки, наподобие

alias gs='git status`
alias pro='cd /d/projects'
alias ls='ls -hF -1 --color=tty --sort=extension'
ВНИМАНИЕ: 
чтобы алиасы, добавленные в c:/Users/ИМЯ_ПОЛЬЗОВАТЕЛЯ/.bashrc заработали, нужно перезапустить консоль.

